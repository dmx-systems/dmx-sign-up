stages:
  - build
  - deploy
  - install

# 1) Build every commit on every branch and add the COMMIT SHORT SHA as suffix
maven-build:
  stage: build
  script:
    - export MAVEN_OPTS='-Xmx128m'
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}

# 2) Copies SNAPSHOT builds on 'master' and 'dm4' branch into download.dmx.systems/ci/ directory
copy-to-ci:
  stage: deploy
  script:
    - CIDIR='/var/www/download.dmx.systems/ci'
    - DESTDIR="${CIDIR}/${CI_PROJECT_NAME}"
    - JARFILE="$( basename $( ls target/*.jar | tail -n1) )"
    - NUNC="$( date +%F )"
    - DESTJARFILE="$( basename ${JARFILE} .jar )_${NUNC}_${CI_PIPELINE_ID}.jar"
    - if [ ! -d  ${DESTDIR} ]; then mkdir ${DESTDIR}; fi
    - cp target/${JARFILE} ${DESTDIR}/${DESTJARFILE}
    - ln -sf  ${DESTDIR}/${DESTJARFILE} ${DESTDIR}/${CI_PROJECT_NAME}-latest.jar
  dependencies:
    - maven-build
  only:
    - master
    - dm4

# 3) Copies tagged RELEASE builds into download.dmx.systems/plugins/ directory
copy-to-release:
  stage: deploy
  script:
    - RELEASEDIR='/var/www/download.dmx.systems/plugins'
    - DESTDIR="${RELEASEDIR}/${CI_PROJECT_NAME}"
    - JARFILE="$( basename $( ls target/*.jar | tail -n1) )"
    - if [ ! -d  ${DESTDIR} ]; then mkdir ${DESTDIR}; fi
    - cp target/${JARFILE} ${DESTDIR}/
  dependencies:
    - maven-build
  only:
    - tags

# 4) Install in signup-test-container
install-in-container:
  stage: install
  script:
    - CONTAINER='signup-test-container'
    - WEBCGI='https://download.dmx.systems/cgi-bin/v1/latest-version.cgi?'
    - CIDIR='/var/www/download.dmx.systems/ci'
    - DESTDIR="${CIDIR}/${CI_PROJECT_NAME}"
    - docker exec ${CONTAINER} sh -c "rm -f /usr/share/dmx/bundle-deploy/${CI_PROJECT_NAME}-*.jar"
    - latest_version="$( /usr/bin/wget -q -O - "${WEBCGI}/ci/${CI_PROJECT_NAME}/${CI_PROJECT_NAME}-latest.jar&basename=true" )"
    - echo "Install ${latest_version} in ${CONTAINER}"
    - NUNC="$( docker exec ${CONTAINER} sh -c "date \"+%b %d, %Y %I:%M:%S %p\"" )"
    - docker cp ${DESTDIR}/${latest_version} ${CONTAINER}:/usr/share/dmx/bundle-deploy/
    - sleep 60
    - LOGFILE='/var/log/dmx/dmx.log'
    - LINE="$( docker exec ${CONTAINER} sh -c "cat ${LOGFILE} | grep -B1 -n SEVERE | tail -n2 | head -n1" )"
    - LINE_DATE="$( echo "${LINE}" | cut -d'-' -f2 | cut -d' ' -f1,2,3,4,5 )"
    - echo "${NUNC}"
    - echo "${LINE_DATE}"
    - |
       if [ $( date --date "${LINE_DATE}" +%s) -gt $( date --date "${NUNC}" +%s) ]; then
         LINE_NR="$( echo "${LINE}" | cut -d'-' -f1 )"
         echo "${LINE_NR}"
         LOG="$( docker exec ${CONTAINER} sh -c "tail -n +${LINE_NR} ${LOGFILE} | grep -v 'INFO:'" )"
       fi
    - if [ "${LOG}" ]; then echo "${LOG}"; ERROR=1; else ERROR=0; fi
    - exit ${ERROR}
  only:
    - master
